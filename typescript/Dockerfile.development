ARG BASE_IMAGE=node:17.8.0-bullseye

FROM $BASE_IMAGE AS planner
WORKDIR /app
COPY . .
# Copies the root and all workspaces `package.json` to /json perserving their parent directories structure
RUN mkdir /json && find . -type f -name package.json -not -path '*/node_modules/*' | xargs -i cp --parents {} /json

FROM $BASE_IMAGE AS cacher
WORKDIR /app
COPY --from=planner /app/package-lock.json .
COPY --from=planner /json .
RUN npm ci


FROM $BASE_IMAGE AS builder-base
WORKDIR /app
# Copy over the cached dependencies 
COPY --from=cacher /app .

#others
COPY . .

######### START WEB SERVICE  #################
################################################################
FROM builder-base as builder-web
RUN npm run build -- --scope=web
# RUN npm run build


FROM node:17.8.0-alpine3.15 AS web
# FROM node:16.14.0-alpine3.15 AS web
WORKDIR /app
EXPOSE 3000


# Automatically leverage output traces to reduce image size 
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder-web /app/apps/web/.next/standalone ./

# You only need to copy next.config.js if you are NOT using the default configuration
COPY --from=builder-web /app/apps/web/next.config.js ./apps/web
COPY --from=builder-web /app/apps/web/public ./apps/web/public
COPY --from=builder-web /app/apps/web/package.json ./apps/web/package.json

# Also copy the static files into the standalone for nodejs server to serve. This can also be
# served over the CDN or nginx.
COPY --from=builder-web /app/apps/web/.next/static ./apps/web/.next/static
CMD ["node", "./apps/web/server.js"]
######### END WEB SERVICE  #################
############################################################## 